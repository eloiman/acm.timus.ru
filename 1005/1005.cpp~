#include <stdio.h>

typedef unsigned long ulong;

void swap_(ulong *w, int x, int y)
{
   ulong tmp = w[x];
   w[x] = w[y];
   w[y] = tmp;
}

void sort_weights(ulong *w, int n)
{   
    int mid = 0;
    ulong *w1 = NULL;
    ulong *w2 = NULL;
    int i1 = 0;
    int i2 = 0;
    ulong wmid = 0;
    int i = 0;
    int j = 0;
    ulong tmp;
       
    if (n <= 1) return;

    if (n <= 2 && w[0] > w[n - 1]) {
        tmp = w[0];
        w[0] = w[1];
        w[1] = tmp;
    } else {
        mid = n / 2;
        wmid = w[mid];
        w1 = new ulong[n];
        w2 = new ulong[n];
        i1 = i2 = 0;
        for (i = 0; i < n; i += 1) {
            if (w[i] < wmid) { 
                w1[i1++] = w[i];
            } else {
                w2[i2++] = w[i];
            }
        }

        for (i = 0; i < i1; i++) {
            printf("> %d ", w1[i]);
        }
        printf("\n");

        //sort_weights(w1, i1);
        //sort_weights(w2, i2);

        for (i = 0, j = 0; i < n; i += 1, j += 1) {
            if (j < i1) {
                w[i] = w1[j];
            } else {
                w[i] = w2[j];
            }
        }

        delete [] w1;
        delete [] w2;
    }
}

int main(void)
{
    int N = 0;
    ulong w[20];

    scanf("%d", &N);
    for (int i = 0; i < N; i += 1) {
        scanf("%d", &w[i]);
    }

    sort_weights(w, N);

    for (int i = 0; i < N; i += 1) {
        printf("%d ", w[i]);
    }

    return 0;
}

